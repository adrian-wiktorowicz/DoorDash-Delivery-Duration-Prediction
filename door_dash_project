{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9034809,"sourceType":"datasetVersion","datasetId":5446018}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-04T15:50:31.044970Z","iopub.execute_input":"2024-09-04T15:50:31.046063Z","iopub.status.idle":"2024-09-04T15:50:31.516032Z","shell.execute_reply.started":"2024-09-04T15:50:31.046026Z","shell.execute_reply":"2024-09-04T15:50:31.514720Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"/kaggle/input/door-dash/datasets/historical_data.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"ddash = pd.read_csv('/kaggle/input/door-dash/datasets/historical_data.csv')","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:31.518784Z","iopub.execute_input":"2024-09-04T15:50:31.519247Z","iopub.status.idle":"2024-09-04T15:50:32.411255Z","shell.execute_reply.started":"2024-09-04T15:50:31.519216Z","shell.execute_reply":"2024-09-04T15:50:32.410194Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"ddash.info()","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.412611Z","iopub.execute_input":"2024-09-04T15:50:32.412997Z","iopub.status.idle":"2024-09-04T15:50:32.515189Z","shell.execute_reply.started":"2024-09-04T15:50:32.412967Z","shell.execute_reply":"2024-09-04T15:50:32.514042Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 197428 entries, 0 to 197427\nData columns (total 16 columns):\n #   Column                                        Non-Null Count   Dtype  \n---  ------                                        --------------   -----  \n 0   market_id                                     196441 non-null  float64\n 1   created_at                                    197428 non-null  object \n 2   actual_delivery_time                          197421 non-null  object \n 3   store_id                                      197428 non-null  int64  \n 4   store_primary_category                        192668 non-null  object \n 5   order_protocol                                196433 non-null  float64\n 6   total_items                                   197428 non-null  int64  \n 7   subtotal                                      197428 non-null  int64  \n 8   num_distinct_items                            197428 non-null  int64  \n 9   min_item_price                                197428 non-null  int64  \n 10  max_item_price                                197428 non-null  int64  \n 11  total_onshift_dashers                         181166 non-null  float64\n 12  total_busy_dashers                            181166 non-null  float64\n 13  total_outstanding_orders                      181166 non-null  float64\n 14  estimated_order_place_duration                197428 non-null  int64  \n 15  estimated_store_to_consumer_driving_duration  196902 non-null  float64\ndtypes: float64(6), int64(7), object(3)\nmemory usage: 24.1+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"ddash.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.516757Z","iopub.execute_input":"2024-09-04T15:50:32.517192Z","iopub.status.idle":"2024-09-04T15:50:32.552324Z","shell.execute_reply.started":"2024-09-04T15:50:32.517153Z","shell.execute_reply":"2024-09-04T15:50:32.551221Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   market_id           created_at actual_delivery_time  store_id  \\\n0        1.0  2015-02-06 22:24:17  2015-02-06 23:27:16      1845   \n1        2.0  2015-02-10 21:49:25  2015-02-10 22:56:29      5477   \n2        3.0  2015-01-22 20:39:28  2015-01-22 21:09:09      5477   \n3        3.0  2015-02-03 21:21:45  2015-02-03 22:13:00      5477   \n4        3.0  2015-02-15 02:40:36  2015-02-15 03:20:26      5477   \n5        3.0  2015-01-28 20:30:38  2015-01-28 21:08:58      5477   \n6        3.0  2015-01-31 02:16:36  2015-01-31 02:43:00      5477   \n7        3.0  2015-02-12 03:03:35  2015-02-12 03:36:20      5477   \n8        2.0  2015-02-16 00:11:35  2015-02-16 00:38:01      5477   \n9        3.0  2015-02-18 01:15:45  2015-02-18 02:08:57      5477   \n\n  store_primary_category  order_protocol  total_items  subtotal  \\\n0               american             1.0            4      3441   \n1                mexican             2.0            1      1900   \n2                    NaN             1.0            1      1900   \n3                    NaN             1.0            6      6900   \n4                    NaN             1.0            3      3900   \n5                    NaN             1.0            3      5000   \n6                    NaN             1.0            2      3900   \n7                    NaN             1.0            4      4850   \n8                 indian             3.0            4      4771   \n9                    NaN             1.0            2      2100   \n\n   num_distinct_items  min_item_price  max_item_price  total_onshift_dashers  \\\n0                   4             557            1239                   33.0   \n1                   1            1400            1400                    1.0   \n2                   1            1900            1900                    1.0   \n3                   5             600            1800                    1.0   \n4                   3            1100            1600                    6.0   \n5                   3            1500            1900                    2.0   \n6                   2            1200            2700                   10.0   \n7                   4             750            1800                    7.0   \n8                   3             820            1604                    8.0   \n9                   2             700            1200                    2.0   \n\n   total_busy_dashers  total_outstanding_orders  \\\n0                14.0                      21.0   \n1                 2.0                       2.0   \n2                 0.0                       0.0   \n3                 1.0                       2.0   \n4                 6.0                       9.0   \n5                 2.0                       2.0   \n6                 9.0                       9.0   \n7                 8.0                       7.0   \n8                 6.0                      18.0   \n9                 2.0                       2.0   \n\n   estimated_order_place_duration  \\\n0                             446   \n1                             446   \n2                             446   \n3                             446   \n4                             446   \n5                             446   \n6                             446   \n7                             446   \n8                             446   \n9                             446   \n\n   estimated_store_to_consumer_driving_duration  \n0                                         861.0  \n1                                         690.0  \n2                                         690.0  \n3                                         289.0  \n4                                         650.0  \n5                                         338.0  \n6                                         638.0  \n7                                         626.0  \n8                                         289.0  \n9                                         715.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>market_id</th>\n      <th>created_at</th>\n      <th>actual_delivery_time</th>\n      <th>store_id</th>\n      <th>store_primary_category</th>\n      <th>order_protocol</th>\n      <th>total_items</th>\n      <th>subtotal</th>\n      <th>num_distinct_items</th>\n      <th>min_item_price</th>\n      <th>max_item_price</th>\n      <th>total_onshift_dashers</th>\n      <th>total_busy_dashers</th>\n      <th>total_outstanding_orders</th>\n      <th>estimated_order_place_duration</th>\n      <th>estimated_store_to_consumer_driving_duration</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>2015-02-06 22:24:17</td>\n      <td>2015-02-06 23:27:16</td>\n      <td>1845</td>\n      <td>american</td>\n      <td>1.0</td>\n      <td>4</td>\n      <td>3441</td>\n      <td>4</td>\n      <td>557</td>\n      <td>1239</td>\n      <td>33.0</td>\n      <td>14.0</td>\n      <td>21.0</td>\n      <td>446</td>\n      <td>861.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2.0</td>\n      <td>2015-02-10 21:49:25</td>\n      <td>2015-02-10 22:56:29</td>\n      <td>5477</td>\n      <td>mexican</td>\n      <td>2.0</td>\n      <td>1</td>\n      <td>1900</td>\n      <td>1</td>\n      <td>1400</td>\n      <td>1400</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>446</td>\n      <td>690.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.0</td>\n      <td>2015-01-22 20:39:28</td>\n      <td>2015-01-22 21:09:09</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>1</td>\n      <td>1900</td>\n      <td>1</td>\n      <td>1900</td>\n      <td>1900</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>446</td>\n      <td>690.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.0</td>\n      <td>2015-02-03 21:21:45</td>\n      <td>2015-02-03 22:13:00</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>6</td>\n      <td>6900</td>\n      <td>5</td>\n      <td>600</td>\n      <td>1800</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>446</td>\n      <td>289.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3.0</td>\n      <td>2015-02-15 02:40:36</td>\n      <td>2015-02-15 03:20:26</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>3</td>\n      <td>3900</td>\n      <td>3</td>\n      <td>1100</td>\n      <td>1600</td>\n      <td>6.0</td>\n      <td>6.0</td>\n      <td>9.0</td>\n      <td>446</td>\n      <td>650.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3.0</td>\n      <td>2015-01-28 20:30:38</td>\n      <td>2015-01-28 21:08:58</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>3</td>\n      <td>5000</td>\n      <td>3</td>\n      <td>1500</td>\n      <td>1900</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>446</td>\n      <td>338.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>3.0</td>\n      <td>2015-01-31 02:16:36</td>\n      <td>2015-01-31 02:43:00</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>3900</td>\n      <td>2</td>\n      <td>1200</td>\n      <td>2700</td>\n      <td>10.0</td>\n      <td>9.0</td>\n      <td>9.0</td>\n      <td>446</td>\n      <td>638.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>3.0</td>\n      <td>2015-02-12 03:03:35</td>\n      <td>2015-02-12 03:36:20</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>4</td>\n      <td>4850</td>\n      <td>4</td>\n      <td>750</td>\n      <td>1800</td>\n      <td>7.0</td>\n      <td>8.0</td>\n      <td>7.0</td>\n      <td>446</td>\n      <td>626.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2.0</td>\n      <td>2015-02-16 00:11:35</td>\n      <td>2015-02-16 00:38:01</td>\n      <td>5477</td>\n      <td>indian</td>\n      <td>3.0</td>\n      <td>4</td>\n      <td>4771</td>\n      <td>3</td>\n      <td>820</td>\n      <td>1604</td>\n      <td>8.0</td>\n      <td>6.0</td>\n      <td>18.0</td>\n      <td>446</td>\n      <td>289.0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>3.0</td>\n      <td>2015-02-18 01:15:45</td>\n      <td>2015-02-18 02:08:57</td>\n      <td>5477</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>2</td>\n      <td>2100</td>\n      <td>2</td>\n      <td>700</td>\n      <td>1200</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>446</td>\n      <td>715.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"ddash.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.555694Z","iopub.execute_input":"2024-09-04T15:50:32.556592Z","iopub.status.idle":"2024-09-04T15:50:32.633700Z","shell.execute_reply.started":"2024-09-04T15:50:32.556538Z","shell.execute_reply":"2024-09-04T15:50:32.632691Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"market_id                                         987\ncreated_at                                          0\nactual_delivery_time                                7\nstore_id                                            0\nstore_primary_category                           4760\norder_protocol                                    995\ntotal_items                                         0\nsubtotal                                            0\nnum_distinct_items                                  0\nmin_item_price                                      0\nmax_item_price                                      0\ntotal_onshift_dashers                           16262\ntotal_busy_dashers                              16262\ntotal_outstanding_orders                        16262\nestimated_order_place_duration                      0\nestimated_store_to_consumer_driving_duration      526\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"ddash['created_at'] = pd.to_datetime(ddash['created_at'])\nddash['actual_delivery_time'] = pd.to_datetime(ddash['actual_delivery_time'])\n\nddash['actual_total_delivery_duration'] = (ddash['actual_delivery_time'] - ddash['created_at']).dt.seconds","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.635136Z","iopub.execute_input":"2024-09-04T15:50:32.635564Z","iopub.status.idle":"2024-09-04T15:50:32.814671Z","shell.execute_reply.started":"2024-09-04T15:50:32.635515Z","shell.execute_reply":"2024-09-04T15:50:32.813431Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"ddash['actual_total_delivery_duration'] = (ddash['actual_delivery_time'] - ddash['created_at']).dt.total_seconds()","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.816116Z","iopub.execute_input":"2024-09-04T15:50:32.816462Z","iopub.status.idle":"2024-09-04T15:50:32.828302Z","shell.execute_reply.started":"2024-09-04T15:50:32.816427Z","shell.execute_reply":"2024-09-04T15:50:32.827135Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"ddash['actual_total_delivery_duration']","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.829823Z","iopub.execute_input":"2024-09-04T15:50:32.830221Z","iopub.status.idle":"2024-09-04T15:50:32.841702Z","shell.execute_reply.started":"2024-09-04T15:50:32.830190Z","shell.execute_reply":"2024-09-04T15:50:32.840574Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"0         3779.0\n1         4024.0\n2         1781.0\n3         3075.0\n4         2390.0\n           ...  \n197423    3907.0\n197424    3383.0\n197425    3008.0\n197426    3907.0\n197427    2228.0\nName: actual_total_delivery_duration, Length: 197428, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"ddash['total_busy_dashers']","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.843043Z","iopub.execute_input":"2024-09-04T15:50:32.843347Z","iopub.status.idle":"2024-09-04T15:50:32.857569Z","shell.execute_reply.started":"2024-09-04T15:50:32.843321Z","shell.execute_reply":"2024-09-04T15:50:32.856490Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"0         14.0\n1          2.0\n2          0.0\n3          1.0\n4          6.0\n          ... \n197423    17.0\n197424    11.0\n197425    41.0\n197426     7.0\n197427    20.0\nName: total_busy_dashers, Length: 197428, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"ddash['busy_dashers_ratio'] = ddash['total_busy_dashers'] / ddash['total_onshift_dashers']","metadata":{"execution":{"iopub.status.busy":"2024-09-04T15:50:32.858746Z","iopub.execute_input":"2024-09-04T15:50:32.859082Z","iopub.status.idle":"2024-09-04T15:50:32.871911Z","shell.execute_reply.started":"2024-09-04T15:50:32.859053Z","shell.execute_reply":"2024-09-04T15:50:32.870643Z"},"trusted":true},"execution_count":12,"outputs":[]}]}